---
title: "test1"
author: "최규빈"
date: "01/02/2024"
---

# Python

## **설치방법**

- 파이썬 프로그램 다운로드 -> 시작버튼 눌러서 설치

- 아나콘다 설치 (그럼 자동으로 파이썬이 설치됨)

- 아나콘다 설치 + 가상환경

- 기타 등등

## **실행방법**

- 파이썬 프롬프트

- .py를 이용하여 실행?

- IDLE

- 파이참

- 스파이더

- Visual Studio Code

- 주피터노트북, 주피터랩 (가상환경 만들어서 하기, 아나콘다 네비게이터에 주피터가 있음)

## **핵심**

- 그냥 (1) 컴퓨터에 (2) 파이썬을 깔아서 (3) 실행하기

- 공통 맥락이 존재하지만, 파이썬이 인기있고 다양한 방법들 각자의 장점이 존재함으로 설치&실행 방법 다양

## **1세대 프로그래머**

- python

- ipython

- 장점 : 자동으로 들여쓰기, 화살표를 이용해서 for문 작성 중 위아래 이동 가능

- 단점 : 마우스로는 이동 불가능, 내가 작성한 코드 관리 어려움

## **2세대 프로그래머**

- 메모장 + anaconda prompt를 이용 (.py를 이용한 python활용)

- 장점 : 마우스를 이용하여 이동가능, 작업 내용이 바탕화면의 메모장에 저장됨

- 단점 : ipython의 장점(구문강조, 도움말기능) 활용 못함

## **3세대 프로그래머**

- 메모장 + ipython

## **4세대 프로그래머**

- IDE(통합개발환경)를 사용

- 메모장 + ipython을 하나로 통합한 프로그램 (ex.jupyter notebook, jupyter lab, spyder, idle, VScode, ...)

- IDE는 내부적으로 연산을 수행하는 능력이 없음 (기생)

- 하나의 IDE가 여러개의 언어와 연결되어 있음

## **5세대 프로그래머**

- 가상컴퓨터(anaconda), 원격컴퓨터(server), 클라우드컴퓨터(colab)의 개념 등장

- 원격컴퓨터

- 원격컴퓨터 + 가상컴퓨터

- 가상컴퓨터

- 클라우드 (ex. 구글코랩)

## **요약 및 정리**

- 결국 (1) 컴퓨터에 (2) 파이썬을 설치하고 (3) 실행하는 과정은 생각보다 다양한 선택의 조합 가능

- (1) 그냥 내 노트북에 파이썬 설치? 내 노트북에 가상컴퓨터 만들고 파이썬 설치? 학교 데스크탑에 파이썬 설치? 설치 안하고 구글 컴퓨터 설치된 파이썬 사용?

- (2) python 설치? ipython 설치? 가상환경을 사용하므로 anaconda 설치? 코랩을 사용하므로 설치 X?

- (3) 어떤 IDE를 쓸지? IDE를 쓰지 않을지? 내가 IDE를 직접구성해서 만들지? 


